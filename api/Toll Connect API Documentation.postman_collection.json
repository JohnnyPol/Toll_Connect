{
	"info": {
		"_postman_id": "e23ff35f-4d44-495f-937f-730a618b86cf",
		"name": "Toll Connect API Documentation",
		"description": "# Toll Connect REST API Documentation\n\nThis is the public interface for interacting with the Toll Connect system.\n\n---\n\n_Toll Connect_ provides Toll Operators the ability to interconnect with each other, by recording passes between each other, aggregating statistics and allowing for payment settlements.\n\n## **Getting started guide**\n\n- The API returns request responses encoded in UTF-8 and in JSON or CSV format (JSON is the default). When an API request returns an error, it is sent in the JSON response as an error key.\n    \n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP 301 redirect to the corresponding HTTPS resources.\n    \n- Time Series data in responses are always sorted in increasing timestamp.\n    \n\n## Authentication\n\nWe implement RBAC (Role-based Access Control) over JWT tokens. All API endpoints are protected using the JWT tokens that are obtained through the `login` operation.\n\n## Response Types\n\n- 200: Success\n    \n- 204: No Content (Successful but with an Empty Response)\n    \n- 400: Bad Request (Invalid Request Parameters)\n    \n- 401: Not Authorized\n    \n- 500: Internal Server Error",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "33038841"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": "{{baseURL}}/login"
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "dummy@operator",
											"type": "text"
										},
										{
											"key": "password",
											"value": "d9e6762dd1c8eaf6d61b3c6192fc408d4d6d5f1176d0c29169bc24e71c3f274ad27fcd5811b313d681f7e55ec02d73d499c95455b6b5bb503acf574fba8ffe85",
											"type": "text"
										}
									]
								},
								"url": "{{baseURL}}/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-powered-by",
									"value": "Express"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "etag",
									"value": "W/\"d0-311bHbXEuEoPjMb1wngRLMj0JNA\""
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "date",
									"value": "Thu, 06 Feb 2025 16:45:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ\"\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									]
								},
								"url": "{{baseURL}}/login"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-powered-by",
									"value": "Express"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "etag",
									"value": "W/\"2b-/P/yYLxwXo6Z3kypsalXWbEuroY\""
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "date",
									"value": "Thu, 06 Feb 2025 16:48:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error: User {{username}} not found\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{baseURL}}/logout"
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/logout"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "x-powered-by",
									"value": "Express"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-length",
									"value": "0"
								},
								{
									"key": "date",
									"value": "Thu, 06 Feb 2025 16:50:27 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "Here are the endpoints controlling user access.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Administration",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{baseURL}}/admin/healthcheck",
						"description": "This confirms the connectivity between the user and the database (end-to-end)"
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/healthcheck"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-powered-by",
									"value": "Express"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-security-policy",
									"value": "default-src 'none'"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "date",
									"value": "Thu, 06 Feb 2025 16:55:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\":\"OK\",\n    \"dbconnection\": {{connection string}},\n    \"n_stations\": {{n_of_toll_stations}},\n    \"n_tags\" : {{n_of_tags}},\n    \"n_passes\": {{n_of_passes}}\n}"
						},
						{
							"name": "401 Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/healthcheck"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{ \r\n    \"status\":\"failed\",\r\n    \"dbconnection\": {{connection string}}\r\n}"
						}
					]
				},
				{
					"name": "Reset Stations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{baseURL}}/admin/resetstations",
						"description": "This method allows the user to reset the available stations to their original state."
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetstations"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"OK\"\r\n}"
						},
						{
							"name": "401 Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetstations"
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"failed\",\r\n    \"info\": \"Error: Invalid JWT, {{reason}}\"\r\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetstations"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"failed\",\r\n    \"info\": \"{{reason}}\"\r\n}"
						}
					]
				},
				{
					"name": "Reset Passes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{baseURL}}/admin/resetpasses",
						"description": "This method allows the user to clear all pass (and related) data."
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetpasses"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"OK\"\r\n}"
						},
						{
							"name": "401 Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetpasses"
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"failed\",\r\n    \"info\": \"Error: Invalid JWT, {{reason}}\"\r\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": "{{baseURL}}/admin/resetpasses"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"failed\",\r\n    \"info\": \"{{reason}}\"\r\n}"
						}
					]
				},
				{
					"name": "Add Passes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"contentType": "text/csv",
									"type": "file",
									"src": []
								}
							]
						},
						"url": "{{baseURL}}/admin/addpasses",
						"description": "Updates passes and related data based on the provided file.\n\nThe CSV file should have the following format:\n\n```\ntimestamp,tollID,tagRef,tagHomeID,charge\n2022-01-01 00:23,NAO30,NAO5ZJA8DZ,NAO,2.5\n2022-01-01 01:02,NO03,NOXFGCAQV,NO,3.25\n...\n\n ```"
					},
					"response": [
						{
							"name": "200 Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"contentType": "text/csv",
											"type": "file",
											"src": []
										}
									]
								},
								"url": "{{baseURL}}/admin/addpasses"
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"status\": \"OK\",\r\n    \"info\": \"Inserted {{n_of_passes}} passes\"\r\n}"
						}
					]
				}
			],
			"description": "Here are endpoints for controlling the entire system.\n\nOnly users with JWT Tokens with Admin User Type have access to these."
		},
		{
			"name": "Operations",
			"item": [
				{
					"name": "Toll Passes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OBSERVATORY-AUTH",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/tollStationPasses/{{tollStationId}}/{{data_from}}/{{date_to}}?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tollStationPasses",
								"{{tollStationId}}",
								"{{data_from}}",
								"{{date_to}}"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}"
								}
							]
						},
						"description": "Gets a list of passes for the specified station and time period."
					},
					"response": [
						{
							"name": "200 Success (JSON)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/tollStationPasses/{{tollStationId}}/{{data_from}}/{{date_to}}?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"tollStationPasses",
										"{{tollStationId}}",
										"{{data_from}}",
										"{{date_to}}"
									],
									"query": [
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"stationID\": \"OO01\",\n    \"stationOperator\": \"olympiaodos\",\n    \"requestTimestamp\": \"2025-02-06 19:35\",\n    \"periodFrom\": \"20220101\",\n    \"periodTo\": \"20220131\",\n    \"nPasses\": 10,\n    \"passList\": [\n        {\n            \"passIndex\": 1,\n            \"passID\": \"129\",\n            \"timestamp\": \"2022-01-02 23:31\",\n            \"tagID\": \"AMLJH75LX\",\n            \"tagProvider\": \"AM\",\n            \"passType\": \"visitor\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 2,\n            \"passID\": \"222\",\n            \"timestamp\": \"2022-01-04 07:49\",\n            \"tagID\": \"EGYTJXEPQ\",\n            \"tagProvider\": \"EG\",\n            \"passType\": \"visitor\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 3,\n            \"passID\": \"398\",\n            \"timestamp\": \"2022-01-06 20:56\",\n            \"tagID\": \"OO7PZE9VI\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 4,\n            \"passID\": \"438\",\n            \"timestamp\": \"2022-01-07 10:29\",\n            \"tagID\": \"NORCBPLJD\",\n            \"tagProvider\": \"NO\",\n            \"passType\": \"visitor\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 5,\n            \"passID\": \"608\",\n            \"timestamp\": \"2022-01-09 17:56\",\n            \"tagID\": \"OO1B0Z3NX\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 6,\n            \"passID\": \"747\",\n            \"timestamp\": \"2022-01-11 06:38\",\n            \"tagID\": \"OOZSJ49IT\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 7,\n            \"passID\": \"826\",\n            \"timestamp\": \"2022-01-12 12:10\",\n            \"tagID\": \"OO7PZE9VI\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 8,\n            \"passID\": \"830\",\n            \"timestamp\": \"2022-01-12 12:50\",\n            \"tagID\": \"OOZSJ49IT\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 9,\n            \"passID\": \"865\",\n            \"timestamp\": \"2022-01-13 01:44\",\n            \"tagID\": \"OOZSJ49IT\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        },\n        {\n            \"passIndex\": 10,\n            \"passID\": \"892\",\n            \"timestamp\": \"2022-01-13 12:09\",\n            \"tagID\": \"OO3KKV9RF\",\n            \"tagProvider\": \"OO\",\n            \"passType\": \"home\",\n            \"passCharge\": 2.3\n        }\n    ]\n}"
						},
						{
							"name": "200 Success (CSV)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-OBSERVATORY-AUTH",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/tollStationPasses/{{tollStationId}}/{{data_from}}/{{date_to}}?format=csv",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"tollStationPasses",
										"{{tollStationId}}",
										"{{data_from}}",
										"{{date_to}}"
									],
									"query": [
										{
											"key": "format",
											"value": "csv"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "stationId,stationOperator,requestTimestamp,periodFrom,periodTo,nPasses,passIndex,passID,timestamp,tagID,tagProvider,passType,passCharge\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,1,129,2022-01-02 23:31,AMLJH75LX,AM,visitor,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,2,222,2022-01-04 07:49,EGYTJXEPQ,EG,visitor,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,3,398,2022-01-06 20:56,OO7PZE9VI,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,4,438,2022-01-07 10:29,NORCBPLJD,NO,visitor,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,5,608,2022-01-09 17:56,OO1B0Z3NX,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,6,747,2022-01-11 06:38,OOZSJ49IT,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,7,826,2022-01-12 12:10,OO7PZE9VI,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,8,830,2022-01-12 12:50,OOZSJ49IT,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,9,865,2022-01-13 01:44,OOZSJ49IT,OO,home,2.3\r\nOO01,olympiaodos,2025-02-06 19:35,20220101,20220131,10,10,892,2022-01-13 12:09,OO3KKV9RF,OO,home,2.3"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://localhost:9115/api"
		},
		{
			"key": "username",
			"value": "dummy@operator",
			"type": "default"
		},
		{
			"key": "password",
			"value": "d9e6762dd1c8eaf6d61b3c6192fc408d4d6d5f1176d0c29169bc24e71c3f274ad27fcd5811b313d681f7e55ec02d73d499c95455b6b5bb503acf574fba8ffe85",
			"type": "default"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzUxMiIsInR5cGUiOiJKV1QifQ.eyJsZXZlbCI6MSwibmFtZSI6ImR1bW15QG9wZXJhdG9yIiwiZXhwIjoxNzM4ODYzOTU3fQ.0KGs4S7_Y3Nbr8qR7gRMuN0R3aRiBpmRciFOWI6NCmtJiQ-okXf-XgYIwTs_7qWfQgrt54-taeDfSEj7oscaBQ",
			"type": "default"
		},
		{
			"key": "tollStationId",
			"value": "OO01",
			"type": "default"
		},
		{
			"key": "data_from",
			"value": "20220101",
			"type": "default"
		},
		{
			"key": "date_to",
			"value": "20220131",
			"type": "default"
		},
		{
			"key": "format",
			"value": "",
			"type": "default"
		}
	]
}